/* -*- c++ -*- */
/* 
 * Copyright 2018 Ron Economos.
 * 
 * This is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 * 
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <gnuradio/io_signature.h>
#include "modulator_bc_impl.h"

namespace gr {
  namespace dvbc {

    modulator_bc::sptr
    modulator_bc::make(dvbc_constellation_t constellation)
    {
      return gnuradio::get_initial_sptr
        (new modulator_bc_impl(constellation));
    }

    /*
     * The private constructor
     */
    modulator_bc_impl::modulator_bc_impl(dvbc_constellation_t constellation)
      : gr::block("modulator_bc",
              gr::io_signature::make(1, 1, sizeof(unsigned char)),
              gr::io_signature::make(1, 1, sizeof(gr_complex)))
    {
      double normalization;
      switch (constellation)
      {
        case MOD_16QAM:
          normalization = std::sqrt(10.0);
          m_16qam[0].real( 1.0 / normalization);
          m_16qam[0].imag( 1.0 / normalization);
          m_16qam[1].real( 3.0 / normalization);
          m_16qam[1].imag( 1.0 / normalization);
          m_16qam[2].real( 1.0 / normalization);
          m_16qam[2].imag( 3.0 / normalization);
          m_16qam[3].real( 3.0 / normalization);
          m_16qam[3].imag( 3.0 / normalization);
          m_16qam[4].real( 1.0 / normalization);
          m_16qam[4].imag(-1.0 / normalization);
          m_16qam[5].real( 1.0 / normalization);
          m_16qam[5].imag(-3.0 / normalization);
          m_16qam[6].real( 3.0 / normalization);
          m_16qam[6].imag(-1.0 / normalization);
          m_16qam[7].real( 3.0 / normalization);
          m_16qam[7].imag(-3.0 / normalization);
          m_16qam[8].real(-1.0 / normalization);
          m_16qam[8].imag( 1.0 / normalization);
          m_16qam[9].real(-1.0 / normalization);
          m_16qam[9].imag( 3.0 / normalization);
          m_16qam[10].real(-3.0 / normalization);
          m_16qam[10].imag( 1.0 / normalization);
          m_16qam[11].real(-3.0 / normalization);
          m_16qam[11].imag( 3.0 / normalization);
          m_16qam[12].real(-1.0 / normalization);
          m_16qam[12].imag(-1.0 / normalization);
          m_16qam[13].real(-3.0 / normalization);
          m_16qam[13].imag(-1.0 / normalization);
          m_16qam[14].real(-1.0 / normalization);
          m_16qam[14].imag(-3.0 / normalization);
          m_16qam[15].real(-3.0 / normalization);
          m_16qam[15].imag(-3.0 / normalization);
          break;
        case MOD_32QAM:
          normalization = std::sqrt(24.0);
          m_32qam[0].real( 1.0 / normalization);
          m_32qam[0].imag( 1.0 / normalization);
          m_32qam[1].real( 3.0 / normalization);
          m_32qam[1].imag( 1.0 / normalization);
          m_32qam[2].real( 3.0 / normalization);
          m_32qam[2].imag( 5.0 / normalization);
          m_32qam[3].real( 5.0 / normalization);
          m_32qam[3].imag( 1.0 / normalization);
          m_32qam[4].real( 1.0 / normalization);
          m_32qam[4].imag( 3.0 / normalization);
          m_32qam[5].real( 3.0 / normalization);
          m_32qam[5].imag( 3.0 / normalization);
          m_32qam[6].real( 1.0 / normalization);
          m_32qam[6].imag( 5.0 / normalization);
          m_32qam[7].real( 5.0 / normalization);
          m_32qam[7].imag( 3.0 / normalization);
          m_32qam[8].real( 1.0 / normalization);
          m_32qam[8].imag(-1.0 / normalization);
          m_32qam[9].real( 1.0 / normalization);
          m_32qam[9].imag(-3.0 / normalization);
          m_32qam[10].real( 5.0 / normalization);
          m_32qam[10].imag(-3.0 / normalization);
          m_32qam[11].real( 1.0 / normalization);
          m_32qam[11].imag(-5.0 / normalization);
          m_32qam[12].real( 3.0 / normalization);
          m_32qam[12].imag(-1.0 / normalization);
          m_32qam[13].real( 3.0 / normalization);
          m_32qam[13].imag(-3.0 / normalization);
          m_32qam[14].real( 5.0 / normalization);
          m_32qam[14].imag(-1.0 / normalization);
          m_32qam[15].real( 3.0 / normalization);
          m_32qam[15].imag(-5.0 / normalization);
          m_32qam[16].real(-1.0 / normalization);
          m_32qam[16].imag( 1.0 / normalization);
          m_32qam[17].real(-1.0 / normalization);
          m_32qam[17].imag( 3.0 / normalization);
          m_32qam[18].real(-5.0 / normalization);
          m_32qam[18].imag( 3.0 / normalization);
          m_32qam[19].real(-1.0 / normalization);
          m_32qam[19].imag( 5.0 / normalization);
          m_32qam[20].real(-3.0 / normalization);
          m_32qam[20].imag( 1.0 / normalization);
          m_32qam[21].real(-3.0 / normalization);
          m_32qam[21].imag( 3.0 / normalization);
          m_32qam[22].real(-5.0 / normalization);
          m_32qam[22].imag( 1.0 / normalization);
          m_32qam[23].real(-3.0 / normalization);
          m_32qam[23].imag( 5.0 / normalization);
          m_32qam[24].real(-1.0 / normalization);
          m_32qam[24].imag(-1.0 / normalization);
          m_32qam[25].real(-3.0 / normalization);
          m_32qam[25].imag(-1.0 / normalization);
          m_32qam[26].real(-3.0 / normalization);
          m_32qam[26].imag(-5.0 / normalization);
          m_32qam[27].real(-5.0 / normalization);
          m_32qam[27].imag(-1.0 / normalization);
          m_32qam[28].real(-1.0 / normalization);
          m_32qam[28].imag(-3.0 / normalization);
          m_32qam[29].real(-3.0 / normalization);
          m_32qam[29].imag(-3.0 / normalization);
          m_32qam[30].real(-1.0 / normalization);
          m_32qam[30].imag(-5.0 / normalization);
          m_32qam[31].real(-5.0 / normalization);
          m_32qam[31].imag(-3.0 / normalization);
          break;
        case MOD_64QAM:
          normalization = std::sqrt(42.0);
          m_64qam[0].real( 1.0 / normalization);
          m_64qam[0].imag( 1.0 / normalization);
          m_64qam[1].real( 3.0 / normalization);
          m_64qam[1].imag( 1.0 / normalization);
          m_64qam[2].real( 1.0 / normalization);
          m_64qam[2].imag( 3.0 / normalization);
          m_64qam[3].real( 3.0 / normalization);
          m_64qam[3].imag( 3.0 / normalization);
          m_64qam[4].real( 7.0 / normalization);
          m_64qam[4].imag( 1.0 / normalization);
          m_64qam[5].real( 5.0 / normalization);
          m_64qam[5].imag( 1.0 / normalization);
          m_64qam[6].real( 7.0 / normalization);
          m_64qam[6].imag( 3.0 / normalization);
          m_64qam[7].real( 5.0 / normalization);
          m_64qam[7].imag( 3.0 / normalization);
          m_64qam[8].real( 1.0 / normalization);
          m_64qam[8].imag( 7.0 / normalization);
          m_64qam[9].real( 3.0 / normalization);
          m_64qam[9].imag( 7.0 / normalization);
          m_64qam[10].real( 1.0 / normalization);
          m_64qam[10].imag( 5.0 / normalization);
          m_64qam[11].real( 3.0 / normalization);
          m_64qam[11].imag( 5.0 / normalization);
          m_64qam[12].real( 7.0 / normalization);
          m_64qam[12].imag( 7.0 / normalization);
          m_64qam[13].real( 5.0 / normalization);
          m_64qam[13].imag( 7.0 / normalization);
          m_64qam[14].real( 7.0 / normalization);
          m_64qam[14].imag( 5.0 / normalization);
          m_64qam[15].real( 5.0 / normalization);
          m_64qam[15].imag( 5.0 / normalization);
          m_64qam[16].real( 1.0 / normalization);
          m_64qam[16].imag(-1.0 / normalization);
          m_64qam[17].real( 1.0 / normalization);
          m_64qam[17].imag(-3.0 / normalization);
          m_64qam[18].real( 3.0 / normalization);
          m_64qam[18].imag(-1.0 / normalization);
          m_64qam[19].real( 3.0 / normalization);
          m_64qam[19].imag(-3.0 / normalization);
          m_64qam[20].real( 1.0 / normalization);
          m_64qam[20].imag(-7.0 / normalization);
          m_64qam[21].real( 1.0 / normalization);
          m_64qam[21].imag(-5.0 / normalization);
          m_64qam[22].real( 3.0 / normalization);
          m_64qam[22].imag(-7.0 / normalization);
          m_64qam[23].real( 3.0 / normalization);
          m_64qam[23].imag(-5.0 / normalization);
          m_64qam[24].real( 7.0 / normalization);
          m_64qam[24].imag(-1.0 / normalization);
          m_64qam[25].real( 7.0 / normalization);
          m_64qam[25].imag(-3.0 / normalization);
          m_64qam[26].real( 5.0 / normalization);
          m_64qam[26].imag(-1.0 / normalization);
          m_64qam[27].real( 5.0 / normalization);
          m_64qam[27].imag(-3.0 / normalization);
          m_64qam[28].real( 7.0 / normalization);
          m_64qam[28].imag(-7.0 / normalization);
          m_64qam[29].real( 7.0 / normalization);
          m_64qam[29].imag(-5.0 / normalization);
          m_64qam[30].real( 5.0 / normalization);
          m_64qam[30].imag(-7.0 / normalization);
          m_64qam[31].real( 5.0 / normalization);
          m_64qam[31].imag(-5.0 / normalization);
          m_64qam[32].real(-1.0 / normalization);
          m_64qam[32].imag( 1.0 / normalization);
          m_64qam[33].real(-1.0 / normalization);
          m_64qam[33].imag( 3.0 / normalization);
          m_64qam[34].real(-3.0 / normalization);
          m_64qam[34].imag( 1.0 / normalization);
          m_64qam[35].real(-3.0 / normalization);
          m_64qam[35].imag( 3.0 / normalization);
          m_64qam[36].real(-1.0 / normalization);
          m_64qam[36].imag( 7.0 / normalization);
          m_64qam[37].real(-1.0 / normalization);
          m_64qam[37].imag( 5.0 / normalization);
          m_64qam[38].real(-3.0 / normalization);
          m_64qam[38].imag( 7.0 / normalization);
          m_64qam[39].real(-3.0 / normalization);
          m_64qam[39].imag( 5.0 / normalization);
          m_64qam[40].real(-7.0 / normalization);
          m_64qam[40].imag( 1.0 / normalization);
          m_64qam[41].real(-7.0 / normalization);
          m_64qam[41].imag( 3.0 / normalization);
          m_64qam[42].real(-5.0 / normalization);
          m_64qam[42].imag( 1.0 / normalization);
          m_64qam[43].real(-5.0 / normalization);
          m_64qam[43].imag( 3.0 / normalization);
          m_64qam[44].real(-7.0 / normalization);
          m_64qam[44].imag( 7.0 / normalization);
          m_64qam[45].real(-7.0 / normalization);
          m_64qam[45].imag( 5.0 / normalization);
          m_64qam[46].real(-5.0 / normalization);
          m_64qam[46].imag( 7.0 / normalization);
          m_64qam[47].real(-5.0 / normalization);
          m_64qam[47].imag( 5.0 / normalization);
          m_64qam[48].real(-1.0 / normalization);
          m_64qam[48].imag(-1.0 / normalization);
          m_64qam[49].real(-3.0 / normalization);
          m_64qam[49].imag(-1.0 / normalization);
          m_64qam[50].real(-1.0 / normalization);
          m_64qam[50].imag(-3.0 / normalization);
          m_64qam[51].real(-3.0 / normalization);
          m_64qam[51].imag(-3.0 / normalization);
          m_64qam[52].real(-7.0 / normalization);
          m_64qam[52].imag(-1.0 / normalization);
          m_64qam[53].real(-5.0 / normalization);
          m_64qam[53].imag(-1.0 / normalization);
          m_64qam[54].real(-7.0 / normalization);
          m_64qam[54].imag(-3.0 / normalization);
          m_64qam[55].real(-5.0 / normalization);
          m_64qam[55].imag(-3.0 / normalization);
          m_64qam[56].real(-1.0 / normalization);
          m_64qam[56].imag(-7.0 / normalization);
          m_64qam[57].real(-3.0 / normalization);
          m_64qam[57].imag(-7.0 / normalization);
          m_64qam[58].real(-1.0 / normalization);
          m_64qam[58].imag(-5.0 / normalization);
          m_64qam[59].real(-3.0 / normalization);
          m_64qam[59].imag(-5.0 / normalization);
          m_64qam[60].real(-7.0 / normalization);
          m_64qam[60].imag(-7.0 / normalization);
          m_64qam[61].real(-5.0 / normalization);
          m_64qam[61].imag(-7.0 / normalization);
          m_64qam[62].real(-7.0 / normalization);
          m_64qam[62].imag(-5.0 / normalization);
          m_64qam[63].real(-5.0 / normalization);
          m_64qam[63].imag(-5.0 / normalization);
          break;
        case MOD_128QAM:
          normalization = std::sqrt(96.0);
          m_128qam[0]  .real(  1.0 / normalization) ;
          m_128qam[0]  .imag(  1.0 / normalization) ;
          m_128qam[1]  .real(  3.0 / normalization) ;
          m_128qam[1]  .imag(  1.0 / normalization) ;
          m_128qam[2]  .real(  1.0 / normalization) ;
          m_128qam[2]  .imag(  3.0 / normalization) ;
          m_128qam[3]  .real(  3.0 / normalization) ;
          m_128qam[3]  .imag(  3.0 / normalization) ;
          m_128qam[4]  .real(  7.0 / normalization) ;
          m_128qam[4]  .imag(  1.0 / normalization) ;
          m_128qam[5]  .real(  5.0 / normalization) ;
          m_128qam[5]  .imag(  1.0 / normalization) ;
          m_128qam[6]  .real(  7.0 / normalization) ;
          m_128qam[6]  .imag(  3.0 / normalization) ;
          m_128qam[7]  .real(  5.0 / normalization) ;
          m_128qam[7]  .imag(  3.0 / normalization) ;
          m_128qam[8]  .real(  7.0 / normalization) ;
          m_128qam[8]  .imag(  9.0 / normalization) ;
          m_128qam[9]  .real(  5.0 / normalization) ;
          m_128qam[9]  .imag(  9.0 / normalization) ;
          m_128qam[10] .real(  7.0 / normalization) ;
          m_128qam[10] .imag( 11.0 / normalization) ;
          m_128qam[11] .real(  5.0 / normalization) ;
          m_128qam[11] .imag( 11.0 / normalization) ;
          m_128qam[12] .real(  9.0 / normalization) ;
          m_128qam[12] .imag(  1.0 / normalization) ;
          m_128qam[13] .real( 11.0 / normalization) ;
          m_128qam[13] .imag(  1.0 / normalization) ;
          m_128qam[14] .real(  9.0 / normalization) ;
          m_128qam[14] .imag(  3.0 / normalization) ;
          m_128qam[15] .real( 11.0 / normalization) ;
          m_128qam[15] .imag(  3.0 / normalization) ;
          m_128qam[16] .real(  1.0 / normalization) ;
          m_128qam[16] .imag(  7.0 / normalization) ;
          m_128qam[17] .real(  3.0 / normalization) ;
          m_128qam[17] .imag(  7.0 / normalization) ;
          m_128qam[18] .real(  1.0 / normalization) ;
          m_128qam[18] .imag(  5.0 / normalization) ;
          m_128qam[19] .real(  3.0 / normalization) ;
          m_128qam[19] .imag(  5.0 / normalization) ;
          m_128qam[20] .real(  7.0 / normalization) ;
          m_128qam[20] .imag(  7.0 / normalization) ;
          m_128qam[21] .real(  5.0 / normalization) ;
          m_128qam[21] .imag(  7.0 / normalization) ;
          m_128qam[22] .real(  7.0 / normalization) ;
          m_128qam[22] .imag(  5.0 / normalization) ;
          m_128qam[23] .real(  5.0 / normalization) ;
          m_128qam[23] .imag(  5.0 / normalization) ;
          m_128qam[24] .real(  1.0 / normalization) ;
          m_128qam[24] .imag(  9.0 / normalization) ;
          m_128qam[25] .real(  3.0 / normalization) ;
          m_128qam[25] .imag(  9.0 / normalization) ;
          m_128qam[26] .real(  1.0 / normalization) ;
          m_128qam[26] .imag( 11.0 / normalization) ;
          m_128qam[27] .real(  3.0 / normalization) ;
          m_128qam[27] .imag( 11.0 / normalization) ;
          m_128qam[28] .real(  9.0 / normalization) ;
          m_128qam[28] .imag(  7.0 / normalization) ;
          m_128qam[29] .real( 11.0 / normalization) ;
          m_128qam[29] .imag(  7.0 / normalization) ;
          m_128qam[30] .real(  9.0 / normalization) ;
          m_128qam[30] .imag(  5.0 / normalization) ;
          m_128qam[31] .real( 11.0 / normalization) ;
          m_128qam[31] .imag(  5.0 / normalization) ;
          m_128qam[32] .real(  1.0 / normalization) ;
          m_128qam[32] .imag( -1.0 / normalization) ;
          m_128qam[33] .real(  1.0 / normalization) ;
          m_128qam[33] .imag( -3.0 / normalization) ;
          m_128qam[34] .real(  3.0 / normalization) ;
          m_128qam[34] .imag( -1.0 / normalization) ;
          m_128qam[35] .real(  3.0 / normalization) ;
          m_128qam[35] .imag( -3.0 / normalization) ;
          m_128qam[36] .real(  1.0 / normalization) ;
          m_128qam[36] .imag( -7.0 / normalization) ;
          m_128qam[37] .real(  1.0 / normalization) ;
          m_128qam[37] .imag( -5.0 / normalization) ;
          m_128qam[38] .real(  3.0 / normalization) ;
          m_128qam[38] .imag( -7.0 / normalization) ;
          m_128qam[39] .real(  3.0 / normalization) ;
          m_128qam[39] .imag( -5.0 / normalization) ;
          m_128qam[40] .real(  9.0 / normalization) ;
          m_128qam[40] .imag( -7.0 / normalization) ;
          m_128qam[41] .real(  9.0 / normalization) ;
          m_128qam[41] .imag( -5.0 / normalization) ;
          m_128qam[42] .real( 11.0 / normalization) ;
          m_128qam[42] .imag( -7.0 / normalization) ;
          m_128qam[43] .real( 11.0 / normalization) ;
          m_128qam[43] .imag( -5.0 / normalization) ;
          m_128qam[44] .real(  1.0 / normalization) ;
          m_128qam[44] .imag( -9.0 / normalization) ;
          m_128qam[45] .real(  1.0 / normalization) ;
          m_128qam[45] .imag(-11.0 / normalization) ;
          m_128qam[46] .real(  3.0 / normalization) ;
          m_128qam[46] .imag( -9.0 / normalization) ;
          m_128qam[47] .real(  3.0 / normalization) ;
          m_128qam[47] .imag(-11.0 / normalization) ;
          m_128qam[48] .real(  7.0 / normalization) ;
          m_128qam[48] .imag( -1.0 / normalization) ;
          m_128qam[49] .real(  7.0 / normalization) ;
          m_128qam[49] .imag( -3.0 / normalization) ;
          m_128qam[50] .real(  5.0 / normalization) ;
          m_128qam[50] .imag( -1.0 / normalization) ;
          m_128qam[51] .real(  5.0 / normalization) ;
          m_128qam[51] .imag( -3.0 / normalization) ;
          m_128qam[52] .real(  7.0 / normalization) ;
          m_128qam[52] .imag( -7.0 / normalization) ;
          m_128qam[53] .real(  7.0 / normalization) ;
          m_128qam[53] .imag( -5.0 / normalization) ;
          m_128qam[54] .real(  5.0 / normalization) ;
          m_128qam[54] .imag( -7.0 / normalization) ;
          m_128qam[55] .real(  5.0 / normalization) ;
          m_128qam[55] .imag( -5.0 / normalization) ;
          m_128qam[56] .real(  9.0 / normalization) ;
          m_128qam[56] .imag( -1.0 / normalization) ;
          m_128qam[57] .real(  9.0 / normalization) ;
          m_128qam[57] .imag( -3.0 / normalization) ;
          m_128qam[58] .real( 11.0 / normalization) ;
          m_128qam[58] .imag( -1.0 / normalization) ;
          m_128qam[59] .real( 11.0 / normalization) ;
          m_128qam[59] .imag( -3.0 / normalization) ;
          m_128qam[60] .real(  7.0 / normalization) ;
          m_128qam[60] .imag( -9.0 / normalization) ;
          m_128qam[61] .real(  7.0 / normalization) ;
          m_128qam[61] .imag(-11.0 / normalization) ;
          m_128qam[62] .real(  5.0 / normalization) ;
          m_128qam[62] .imag( -9.0 / normalization) ;
          m_128qam[63] .real(  5.0 / normalization) ;
          m_128qam[63] .imag(-11.0 / normalization) ;
          m_128qam[64] .real( -1.0 / normalization) ;
          m_128qam[64] .imag(  1.0 / normalization) ;
          m_128qam[65] .real( -1.0 / normalization) ;
          m_128qam[65] .imag(  3.0 / normalization) ;
          m_128qam[66] .real( -3.0 / normalization) ;
          m_128qam[66] .imag(  1.0 / normalization) ;
          m_128qam[67] .real( -3.0 / normalization) ;
          m_128qam[67] .imag(  3.0 / normalization) ;
          m_128qam[68] .real( -1.0 / normalization) ;
          m_128qam[68] .imag(  7.0 / normalization) ;
          m_128qam[69] .real( -1.0 / normalization) ;
          m_128qam[69] .imag(  5.0 / normalization) ;
          m_128qam[70] .real( -3.0 / normalization) ;
          m_128qam[70] .imag(  7.0 / normalization) ;
          m_128qam[71] .real( -3.0 / normalization) ;
          m_128qam[71] .imag(  5.0 / normalization) ;
          m_128qam[72] .real( -9.0 / normalization) ;
          m_128qam[72] .imag(  7.0 / normalization) ;
          m_128qam[73] .real( -9.0 / normalization) ;
          m_128qam[73] .imag(  5.0 / normalization) ;
          m_128qam[74] .real(-11.0 / normalization) ;
          m_128qam[74] .imag(  7.0 / normalization) ;
          m_128qam[75] .real(-11.0 / normalization) ;
          m_128qam[75] .imag(  5.0 / normalization) ;
          m_128qam[76] .real( -1.0 / normalization) ;
          m_128qam[76] .imag(  9.0 / normalization) ;
          m_128qam[77] .real( -1.0 / normalization) ;
          m_128qam[77] .imag( 11.0 / normalization) ;
          m_128qam[78] .real( -3.0 / normalization) ;
          m_128qam[78] .imag(  9.0 / normalization) ;
          m_128qam[79] .real( -3.0 / normalization) ;
          m_128qam[79] .imag( 11.0 / normalization) ;
          m_128qam[80] .real( -7.0 / normalization) ;
          m_128qam[80] .imag(  1.0 / normalization) ;
          m_128qam[81] .real( -7.0 / normalization) ;
          m_128qam[81] .imag(  3.0 / normalization) ;
          m_128qam[82] .real( -5.0 / normalization) ;
          m_128qam[82] .imag(  1.0 / normalization) ;
          m_128qam[83] .real( -5.0 / normalization) ;
          m_128qam[83] .imag(  3.0 / normalization) ;
          m_128qam[84] .real( -7.0 / normalization) ;
          m_128qam[84] .imag(  7.0 / normalization) ;
          m_128qam[85] .real( -7.0 / normalization) ;
          m_128qam[85] .imag(  5.0 / normalization) ;
          m_128qam[86] .real( -5.0 / normalization) ;
          m_128qam[86] .imag(  7.0 / normalization) ;
          m_128qam[87] .real( -5.0 / normalization) ;
          m_128qam[87] .imag(  5.0 / normalization) ;
          m_128qam[88] .real( -9.0 / normalization) ;
          m_128qam[88] .imag(  1.0 / normalization) ;
          m_128qam[89] .real( -9.0 / normalization) ;
          m_128qam[89] .imag(  3.0 / normalization) ;
          m_128qam[90] .real(-11.0 / normalization) ;
          m_128qam[90] .imag(  1.0 / normalization) ;
          m_128qam[91] .real(-11.0 / normalization) ;
          m_128qam[91] .imag(  3.0 / normalization) ;
          m_128qam[92] .real( -7.0 / normalization) ;
          m_128qam[92] .imag(  9.0 / normalization) ;
          m_128qam[93] .real( -7.0 / normalization) ;
          m_128qam[93] .imag( 11.0 / normalization) ;
          m_128qam[94] .real( -5.0 / normalization) ;
          m_128qam[94] .imag(  9.0 / normalization) ;
          m_128qam[95] .real( -5.0 / normalization) ;
          m_128qam[95] .imag( 11.0 / normalization) ;
          m_128qam[96] .real( -1.0 / normalization) ;
          m_128qam[96] .imag( -1.0 / normalization) ;
          m_128qam[97] .real( -3.0 / normalization) ;
          m_128qam[97] .imag( -1.0 / normalization) ;
          m_128qam[98] .real( -1.0 / normalization) ;
          m_128qam[98] .imag( -3.0 / normalization) ;
          m_128qam[99] .real( -3.0 / normalization) ;
          m_128qam[99] .imag( -3.0 / normalization) ;
          m_128qam[100].real( -7.0 / normalization);
          m_128qam[100].imag( -1.0 / normalization);
          m_128qam[101].real( -5.0 / normalization);
          m_128qam[101].imag( -1.0 / normalization);
          m_128qam[102].real( -7.0 / normalization);
          m_128qam[102].imag( -3.0 / normalization);
          m_128qam[103].real( -5.0 / normalization);
          m_128qam[103].imag( -3.0 / normalization);
          m_128qam[104].real( -7.0 / normalization);
          m_128qam[104].imag( -9.0 / normalization);
          m_128qam[105].real( -5.0 / normalization);
          m_128qam[105].imag( -9.0 / normalization);
          m_128qam[106].real( -7.0 / normalization);
          m_128qam[106].imag(-11.0 / normalization);
          m_128qam[107].real( -5.0 / normalization);
          m_128qam[107].imag(-11.0 / normalization);
          m_128qam[108].real( -9.0 / normalization);
          m_128qam[108].imag( -1.0 / normalization);
          m_128qam[109].real(-11.0 / normalization);
          m_128qam[109].imag( -1.0 / normalization);
          m_128qam[110].real( -9.0 / normalization);
          m_128qam[110].imag( -3.0 / normalization);
          m_128qam[111].real(-11.0 / normalization);
          m_128qam[111].imag( -3.0 / normalization);
          m_128qam[112].real( -1.0 / normalization);
          m_128qam[112].imag( -7.0 / normalization);
          m_128qam[113].real( -3.0 / normalization);
          m_128qam[113].imag( -7.0 / normalization);
          m_128qam[114].real( -1.0 / normalization);
          m_128qam[114].imag( -5.0 / normalization);
          m_128qam[115].real( -3.0 / normalization);
          m_128qam[115].imag( -5.0 / normalization);
          m_128qam[116].real( -7.0 / normalization);
          m_128qam[116].imag( -7.0 / normalization);
          m_128qam[117].real( -5.0 / normalization);
          m_128qam[117].imag( -7.0 / normalization);
          m_128qam[118].real( -7.0 / normalization);
          m_128qam[118].imag( -5.0 / normalization);
          m_128qam[119].real( -5.0 / normalization);
          m_128qam[119].imag( -5.0 / normalization);
          m_128qam[120].real( -1.0 / normalization);
          m_128qam[120].imag( -9.0 / normalization);
          m_128qam[121].real( -3.0 / normalization);
          m_128qam[121].imag( -9.0 / normalization);
          m_128qam[122].real( -1.0 / normalization);
          m_128qam[122].imag(-11.0 / normalization);
          m_128qam[123].real( -3.0 / normalization);
          m_128qam[123].imag(-11.0 / normalization);
          m_128qam[124].real( -9.0 / normalization);
          m_128qam[124].imag( -7.0 / normalization);
          m_128qam[125].real(-11.0 / normalization);
          m_128qam[125].imag( -7.0 / normalization);
          m_128qam[126].real( -9.0 / normalization);
          m_128qam[126].imag( -5.0 / normalization);
          m_128qam[127].real(-11.0 / normalization);
          m_128qam[127].imag( -5.0 / normalization);
          break;
        case MOD_256QAM:
          normalization = std::sqrt(170.0);
          m_256qam[0].real(  1.0 / normalization);
          m_256qam[0].imag(  1.0 / normalization);
          m_256qam[1].real(  3.0 / normalization);
          m_256qam[1].imag(  1.0 / normalization);
          m_256qam[2].real(  1.0 / normalization);
          m_256qam[2].imag(  3.0 / normalization);
          m_256qam[3].real(  3.0 / normalization);
          m_256qam[3].imag(  3.0 / normalization);
          m_256qam[4].real(  7.0 / normalization);
          m_256qam[4].imag(  1.0 / normalization);
          m_256qam[5].real(  5.0 / normalization);
          m_256qam[5].imag(  1.0 / normalization);
          m_256qam[6].real(  7.0 / normalization);
          m_256qam[6].imag(  3.0 / normalization);
          m_256qam[7].real(  5.0 / normalization);
          m_256qam[7].imag(  3.0 / normalization);
          m_256qam[8].real(  1.0 / normalization);
          m_256qam[8].imag(  7.0 / normalization);
          m_256qam[9].real(  3.0 / normalization);
          m_256qam[9].imag(  7.0 / normalization);
          m_256qam[10].real(  1.0 / normalization);
          m_256qam[10].imag(  5.0 / normalization);
          m_256qam[11].real(  3.0 / normalization);
          m_256qam[11].imag(  5.0 / normalization);
          m_256qam[12].real(  7.0 / normalization);
          m_256qam[12].imag(  7.0 / normalization);
          m_256qam[13].real(  5.0 / normalization);
          m_256qam[13].imag(  7.0 / normalization);
          m_256qam[14].real(  7.0 / normalization);
          m_256qam[14].imag(  5.0 / normalization);
          m_256qam[15].real(  5.0 / normalization);
          m_256qam[15].imag(  5.0 / normalization);
          m_256qam[16].real( 15.0 / normalization);
          m_256qam[16].imag(  1.0 / normalization);
          m_256qam[17].real( 13.0 / normalization);
          m_256qam[17].imag(  1.0 / normalization);
          m_256qam[18].real( 15.0 / normalization);
          m_256qam[18].imag(  3.0 / normalization);
          m_256qam[19].real( 13.0 / normalization);
          m_256qam[19].imag(  3.0 / normalization);
          m_256qam[20].real(  9.0 / normalization);
          m_256qam[20].imag(  1.0 / normalization);
          m_256qam[21].real( 11.0 / normalization);
          m_256qam[21].imag(  1.0 / normalization);
          m_256qam[22].real(  9.0 / normalization);
          m_256qam[22].imag(  3.0 / normalization);
          m_256qam[23].real( 11.0 / normalization);
          m_256qam[23].imag(  3.0 / normalization);
          m_256qam[24].real( 15.0 / normalization);
          m_256qam[24].imag(  7.0 / normalization);
          m_256qam[25].real( 13.0 / normalization);
          m_256qam[25].imag(  7.0 / normalization);
          m_256qam[26].real( 15.0 / normalization);
          m_256qam[26].imag(  5.0 / normalization);
          m_256qam[27].real( 13.0 / normalization);
          m_256qam[27].imag(  5.0 / normalization);
          m_256qam[28].real(  9.0 / normalization);
          m_256qam[28].imag(  7.0 / normalization);
          m_256qam[29].real( 11.0 / normalization);
          m_256qam[29].imag(  7.0 / normalization);
          m_256qam[30].real(  9.0 / normalization);
          m_256qam[30].imag(  5.0 / normalization);
          m_256qam[31].real( 11.0 / normalization);
          m_256qam[31].imag(  5.0 / normalization);
          m_256qam[32].real(  1.0 / normalization);
          m_256qam[32].imag( 15.0 / normalization);
          m_256qam[33].real(  3.0 / normalization);
          m_256qam[33].imag( 15.0 / normalization);
          m_256qam[34].real(  1.0 / normalization);
          m_256qam[34].imag( 13.0 / normalization);
          m_256qam[35].real(  3.0 / normalization);
          m_256qam[35].imag( 13.0 / normalization);
          m_256qam[36].real(  7.0 / normalization);
          m_256qam[36].imag( 15.0 / normalization);
          m_256qam[37].real(  5.0 / normalization);
          m_256qam[37].imag( 15.0 / normalization);
          m_256qam[38].real(  7.0 / normalization);
          m_256qam[38].imag( 13.0 / normalization);
          m_256qam[39].real(  5.0 / normalization);
          m_256qam[39].imag( 13.0 / normalization);
          m_256qam[40].real(  1.0 / normalization);
          m_256qam[40].imag(  9.0 / normalization);
          m_256qam[41].real(  3.0 / normalization);
          m_256qam[41].imag(  9.0 / normalization);
          m_256qam[42].real(  1.0 / normalization);
          m_256qam[42].imag( 11.0 / normalization);
          m_256qam[43].real(  3.0 / normalization);
          m_256qam[43].imag( 11.0 / normalization);
          m_256qam[44].real(  7.0 / normalization);
          m_256qam[44].imag(  9.0 / normalization);
          m_256qam[45].real(  5.0 / normalization);
          m_256qam[45].imag(  9.0 / normalization);
          m_256qam[46].real(  7.0 / normalization);
          m_256qam[46].imag( 11.0 / normalization);
          m_256qam[47].real(  5.0 / normalization);
          m_256qam[47].imag( 11.0 / normalization);
          m_256qam[48].real( 15.0 / normalization);
          m_256qam[48].imag( 15.0 / normalization);
          m_256qam[49].real( 13.0 / normalization);
          m_256qam[49].imag( 15.0 / normalization);
          m_256qam[50].real( 15.0 / normalization);
          m_256qam[50].imag( 13.0 / normalization);
          m_256qam[51].real( 13.0 / normalization);
          m_256qam[51].imag( 13.0 / normalization);
          m_256qam[52].real(  9.0 / normalization);
          m_256qam[52].imag( 15.0 / normalization);
          m_256qam[53].real( 11.0 / normalization);
          m_256qam[53].imag( 15.0 / normalization);
          m_256qam[54].real(  9.0 / normalization);
          m_256qam[54].imag( 13.0 / normalization);
          m_256qam[55].real( 11.0 / normalization);
          m_256qam[55].imag( 13.0 / normalization);
          m_256qam[56].real( 15.0 / normalization);
          m_256qam[56].imag(  9.0 / normalization);
          m_256qam[57].real( 13.0 / normalization);
          m_256qam[57].imag(  9.0 / normalization);
          m_256qam[58].real( 15.0 / normalization);
          m_256qam[58].imag( 11.0 / normalization);
          m_256qam[59].real( 13.0 / normalization);
          m_256qam[59].imag( 11.0 / normalization);
          m_256qam[60].real(  9.0 / normalization);
          m_256qam[60].imag(  9.0 / normalization);
          m_256qam[61].real( 11.0 / normalization);
          m_256qam[61].imag(  9.0 / normalization);
          m_256qam[62].real(  9.0 / normalization);
          m_256qam[62].imag( 11.0 / normalization);
          m_256qam[63].real( 11.0 / normalization);
          m_256qam[63].imag( 11.0 / normalization);
          m_256qam[64].real(  1.0 / normalization);
          m_256qam[64].imag( -1.0 / normalization);
          m_256qam[65].real(  1.0 / normalization);
          m_256qam[65].imag( -3.0 / normalization);
          m_256qam[66].real(  3.0 / normalization);
          m_256qam[66].imag( -1.0 / normalization);
          m_256qam[67].real(  3.0 / normalization);
          m_256qam[67].imag( -3.0 / normalization);
          m_256qam[68].real(  1.0 / normalization);
          m_256qam[68].imag( -7.0 / normalization);
          m_256qam[69].real(  1.0 / normalization);
          m_256qam[69].imag( -5.0 / normalization);
          m_256qam[70].real(  3.0 / normalization);
          m_256qam[70].imag( -7.0 / normalization);
          m_256qam[71].real(  3.0 / normalization);
          m_256qam[71].imag( -5.0 / normalization);
          m_256qam[72].real(  7.0 / normalization);
          m_256qam[72].imag( -1.0 / normalization);
          m_256qam[73].real(  7.0 / normalization);
          m_256qam[73].imag( -3.0 / normalization);
          m_256qam[74].real(  5.0 / normalization);
          m_256qam[74].imag( -1.0 / normalization);
          m_256qam[75].real(  5.0 / normalization);
          m_256qam[75].imag( -3.0 / normalization);
          m_256qam[76].real(  7.0 / normalization);
          m_256qam[76].imag( -7.0 / normalization);
          m_256qam[77].real(  7.0 / normalization);
          m_256qam[77].imag( -5.0 / normalization);
          m_256qam[78].real(  5.0 / normalization);
          m_256qam[78].imag( -7.0 / normalization);
          m_256qam[79].real(  5.0 / normalization);
          m_256qam[79].imag( -5.0 / normalization);
          m_256qam[80].real(  1.0 / normalization);
          m_256qam[80].imag(-15.0 / normalization);
          m_256qam[81].real(  1.0 / normalization);
          m_256qam[81].imag(-13.0 / normalization);
          m_256qam[82].real(  3.0 / normalization);
          m_256qam[82].imag(-15.0 / normalization);
          m_256qam[83].real(  3.0 / normalization);
          m_256qam[83].imag(-13.0 / normalization);
          m_256qam[84].real(  1.0 / normalization);
          m_256qam[84].imag( -9.0 / normalization);
          m_256qam[85].real(  1.0 / normalization);
          m_256qam[85].imag(-11.0 / normalization);
          m_256qam[86].real(  3.0 / normalization);
          m_256qam[86].imag( -9.0 / normalization);
          m_256qam[87].real(  3.0 / normalization);
          m_256qam[87].imag(-11.0 / normalization);
          m_256qam[88].real(  7.0 / normalization);
          m_256qam[88].imag(-15.0 / normalization);
          m_256qam[89].real(  7.0 / normalization);
          m_256qam[89].imag(-13.0 / normalization);
          m_256qam[90].real(  5.0 / normalization);
          m_256qam[90].imag(-15.0 / normalization);
          m_256qam[91].real(  5.0 / normalization);
          m_256qam[91].imag(-13.0 / normalization);
          m_256qam[92].real(  7.0 / normalization);
          m_256qam[92].imag( -9.0 / normalization);
          m_256qam[93].real(  7.0 / normalization);
          m_256qam[93].imag(-11.0 / normalization);
          m_256qam[94].real(  5.0 / normalization);
          m_256qam[94].imag( -9.0 / normalization);
          m_256qam[95].real(  5.0 / normalization);
          m_256qam[95].imag(-11.0 / normalization);
          m_256qam[96].real( 15.0 / normalization);
          m_256qam[96].imag( -1.0 / normalization);
          m_256qam[97].real( 15.0 / normalization);
          m_256qam[97].imag( -3.0 / normalization);
          m_256qam[98].real( 13.0 / normalization);
          m_256qam[98].imag( -1.0 / normalization);
          m_256qam[99].real( 13.0 / normalization);
          m_256qam[99].imag( -3.0 / normalization);
          m_256qam[100].real( 15.0 / normalization);
          m_256qam[100].imag( -7.0 / normalization);
          m_256qam[101].real( 15.0 / normalization);
          m_256qam[101].imag( -5.0 / normalization);
          m_256qam[102].real( 13.0 / normalization);
          m_256qam[102].imag( -7.0 / normalization);
          m_256qam[103].real( 13.0 / normalization);
          m_256qam[103].imag( -5.0 / normalization);
          m_256qam[104].real(  9.0 / normalization);
          m_256qam[104].imag( -1.0 / normalization);
          m_256qam[105].real(  9.0 / normalization);
          m_256qam[105].imag( -3.0 / normalization);
          m_256qam[106].real( 11.0 / normalization);
          m_256qam[106].imag( -1.0 / normalization);
          m_256qam[107].real( 11.0 / normalization);
          m_256qam[107].imag( -3.0 / normalization);
          m_256qam[108].real(  9.0 / normalization);
          m_256qam[108].imag( -7.0 / normalization);
          m_256qam[109].real(  9.0 / normalization);
          m_256qam[109].imag( -5.0 / normalization);
          m_256qam[110].real( 11.0 / normalization);
          m_256qam[110].imag( -7.0 / normalization);
          m_256qam[111].real( 11.0 / normalization);
          m_256qam[111].imag( -5.0 / normalization);
          m_256qam[112].real( 15.0 / normalization);
          m_256qam[112].imag(-15.0 / normalization);
          m_256qam[113].real( 15.0 / normalization);
          m_256qam[113].imag(-13.0 / normalization);
          m_256qam[114].real( 13.0 / normalization);
          m_256qam[114].imag(-15.0 / normalization);
          m_256qam[115].real( 13.0 / normalization);
          m_256qam[115].imag(-13.0 / normalization);
          m_256qam[116].real( 15.0 / normalization);
          m_256qam[116].imag( -9.0 / normalization);
          m_256qam[117].real( 15.0 / normalization);
          m_256qam[117].imag(-11.0 / normalization);
          m_256qam[118].real( 13.0 / normalization);
          m_256qam[118].imag( -9.0 / normalization);
          m_256qam[119].real( 13.0 / normalization);
          m_256qam[119].imag(-11.0 / normalization);
          m_256qam[120].real(  9.0 / normalization);
          m_256qam[120].imag(-15.0 / normalization);
          m_256qam[121].real(  9.0 / normalization);
          m_256qam[121].imag(-13.0 / normalization);
          m_256qam[122].real( 11.0 / normalization);
          m_256qam[122].imag(-15.0 / normalization);
          m_256qam[123].real( 11.0 / normalization);
          m_256qam[123].imag(-13.0 / normalization);
          m_256qam[124].real(  9.0 / normalization);
          m_256qam[124].imag( -9.0 / normalization);
          m_256qam[125].real(  9.0 / normalization);
          m_256qam[125].imag(-11.0 / normalization);
          m_256qam[126].real( 11.0 / normalization);
          m_256qam[126].imag( -9.0 / normalization);
          m_256qam[127].real( 11.0 / normalization);
          m_256qam[127].imag(-11.0 / normalization);
          m_256qam[128].real( -1.0 / normalization);
          m_256qam[128].imag(  1.0 / normalization);
          m_256qam[129].real( -1.0 / normalization);
          m_256qam[129].imag(  3.0 / normalization);
          m_256qam[130].real( -3.0 / normalization);
          m_256qam[130].imag(  1.0 / normalization);
          m_256qam[131].real( -3.0 / normalization);
          m_256qam[131].imag(  3.0 / normalization);
          m_256qam[132].real( -1.0 / normalization);
          m_256qam[132].imag(  7.0 / normalization);
          m_256qam[133].real( -1.0 / normalization);
          m_256qam[133].imag(  5.0 / normalization);
          m_256qam[134].real( -3.0 / normalization);
          m_256qam[134].imag(  7.0 / normalization);
          m_256qam[135].real( -3.0 / normalization);
          m_256qam[135].imag(  5.0 / normalization);
          m_256qam[136].real( -7.0 / normalization);
          m_256qam[136].imag(  1.0 / normalization);
          m_256qam[137].real( -7.0 / normalization);
          m_256qam[137].imag(  3.0 / normalization);
          m_256qam[138].real( -5.0 / normalization);
          m_256qam[138].imag(  1.0 / normalization);
          m_256qam[139].real( -5.0 / normalization);
          m_256qam[139].imag(  3.0 / normalization);
          m_256qam[140].real( -7.0 / normalization);
          m_256qam[140].imag(  7.0 / normalization);
          m_256qam[141].real( -7.0 / normalization);
          m_256qam[141].imag(  5.0 / normalization);
          m_256qam[142].real( -5.0 / normalization);
          m_256qam[142].imag(  7.0 / normalization);
          m_256qam[143].real( -5.0 / normalization);
          m_256qam[143].imag(  5.0 / normalization);
          m_256qam[144].real( -1.0 / normalization);
          m_256qam[144].imag( 15.0 / normalization);
          m_256qam[145].real( -1.0 / normalization);
          m_256qam[145].imag( 13.0 / normalization);
          m_256qam[146].real( -3.0 / normalization);
          m_256qam[146].imag( 15.0 / normalization);
          m_256qam[147].real( -3.0 / normalization);
          m_256qam[147].imag( 13.0 / normalization);
          m_256qam[148].real( -1.0 / normalization);
          m_256qam[148].imag(  9.0 / normalization);
          m_256qam[149].real( -1.0 / normalization);
          m_256qam[149].imag( 11.0 / normalization);
          m_256qam[150].real( -3.0 / normalization);
          m_256qam[150].imag(  9.0 / normalization);
          m_256qam[151].real( -3.0 / normalization);
          m_256qam[151].imag( 11.0 / normalization);
          m_256qam[152].real( -7.0 / normalization);
          m_256qam[152].imag( 15.0 / normalization);
          m_256qam[153].real( -7.0 / normalization);
          m_256qam[153].imag( 13.0 / normalization);
          m_256qam[154].real( -5.0 / normalization);
          m_256qam[154].imag( 15.0 / normalization);
          m_256qam[155].real( -5.0 / normalization);
          m_256qam[155].imag( 13.0 / normalization);
          m_256qam[156].real( -7.0 / normalization);
          m_256qam[156].imag(  9.0 / normalization);
          m_256qam[157].real( -7.0 / normalization);
          m_256qam[157].imag( 11.0 / normalization);
          m_256qam[158].real( -5.0 / normalization);
          m_256qam[158].imag(  9.0 / normalization);
          m_256qam[159].real( -5.0 / normalization);
          m_256qam[159].imag( 11.0 / normalization);
          m_256qam[160].real(-15.0 / normalization);
          m_256qam[160].imag(  1.0 / normalization);
          m_256qam[161].real(-15.0 / normalization);
          m_256qam[161].imag(  3.0 / normalization);
          m_256qam[162].real(-13.0 / normalization);
          m_256qam[162].imag(  1.0 / normalization);
          m_256qam[163].real(-13.0 / normalization);
          m_256qam[163].imag(  3.0 / normalization);
          m_256qam[164].real(-15.0 / normalization);
          m_256qam[164].imag(  7.0 / normalization);
          m_256qam[165].real(-15.0 / normalization);
          m_256qam[165].imag(  5.0 / normalization);
          m_256qam[166].real(-13.0 / normalization);
          m_256qam[166].imag(  7.0 / normalization);
          m_256qam[167].real(-13.0 / normalization);
          m_256qam[167].imag(  5.0 / normalization);
          m_256qam[168].real( -9.0 / normalization);
          m_256qam[168].imag(  1.0 / normalization);
          m_256qam[169].real( -9.0 / normalization);
          m_256qam[169].imag(  3.0 / normalization);
          m_256qam[170].real(-11.0 / normalization);
          m_256qam[170].imag(  1.0 / normalization);
          m_256qam[171].real(-11.0 / normalization);
          m_256qam[171].imag(  3.0 / normalization);
          m_256qam[172].real( -9.0 / normalization);
          m_256qam[172].imag(  7.0 / normalization);
          m_256qam[173].real( -9.0 / normalization);
          m_256qam[173].imag(  5.0 / normalization);
          m_256qam[174].real(-11.0 / normalization);
          m_256qam[174].imag(  7.0 / normalization);
          m_256qam[175].real(-11.0 / normalization);
          m_256qam[175].imag(  5.0 / normalization);
          m_256qam[176].real(-15.0 / normalization);
          m_256qam[176].imag( 15.0 / normalization);
          m_256qam[177].real(-15.0 / normalization);
          m_256qam[177].imag( 13.0 / normalization);
          m_256qam[178].real(-13.0 / normalization);
          m_256qam[178].imag( 15.0 / normalization);
          m_256qam[179].real(-13.0 / normalization);
          m_256qam[179].imag( 13.0 / normalization);
          m_256qam[180].real(-15.0 / normalization);
          m_256qam[180].imag(  9.0 / normalization);
          m_256qam[181].real(-15.0 / normalization);
          m_256qam[181].imag( 11.0 / normalization);
          m_256qam[182].real(-13.0 / normalization);
          m_256qam[182].imag(  9.0 / normalization);
          m_256qam[183].real(-13.0 / normalization);
          m_256qam[183].imag( 11.0 / normalization);
          m_256qam[184].real( -9.0 / normalization);
          m_256qam[184].imag( 15.0 / normalization);
          m_256qam[185].real( -9.0 / normalization);
          m_256qam[185].imag( 13.0 / normalization);
          m_256qam[186].real(-11.0 / normalization);
          m_256qam[186].imag( 15.0 / normalization);
          m_256qam[187].real(-11.0 / normalization);
          m_256qam[187].imag( 13.0 / normalization);
          m_256qam[188].real( -9.0 / normalization);
          m_256qam[188].imag(  9.0 / normalization);
          m_256qam[189].real( -9.0 / normalization);
          m_256qam[189].imag( 11.0 / normalization);
          m_256qam[190].real(-11.0 / normalization);
          m_256qam[190].imag(  9.0 / normalization);
          m_256qam[191].real(-11.0 / normalization);
          m_256qam[191].imag( 11.0 / normalization);
          m_256qam[192].real( -1.0 / normalization);
          m_256qam[192].imag( -1.0 / normalization);
          m_256qam[193].real( -3.0 / normalization);
          m_256qam[193].imag( -1.0 / normalization);
          m_256qam[194].real( -1.0 / normalization);
          m_256qam[194].imag( -3.0 / normalization);
          m_256qam[195].real( -3.0 / normalization);
          m_256qam[195].imag( -3.0 / normalization);
          m_256qam[196].real( -7.0 / normalization);
          m_256qam[196].imag( -1.0 / normalization);
          m_256qam[197].real( -5.0 / normalization);
          m_256qam[197].imag( -1.0 / normalization);
          m_256qam[198].real( -7.0 / normalization);
          m_256qam[198].imag( -3.0 / normalization);
          m_256qam[199].real( -5.0 / normalization);
          m_256qam[199].imag( -3.0 / normalization);
          m_256qam[200].real( -1.0 / normalization);
          m_256qam[200].imag( -7.0 / normalization);
          m_256qam[201].real( -3.0 / normalization);
          m_256qam[201].imag( -7.0 / normalization);
          m_256qam[202].real( -1.0 / normalization);
          m_256qam[202].imag( -5.0 / normalization);
          m_256qam[203].real( -3.0 / normalization);
          m_256qam[203].imag( -5.0 / normalization);
          m_256qam[204].real( -7.0 / normalization);
          m_256qam[204].imag( -7.0 / normalization);
          m_256qam[205].real( -5.0 / normalization);
          m_256qam[205].imag( -7.0 / normalization);
          m_256qam[206].real( -7.0 / normalization);
          m_256qam[206].imag( -5.0 / normalization);
          m_256qam[207].real( -5.0 / normalization);
          m_256qam[207].imag( -5.0 / normalization);
          m_256qam[208].real(-15.0 / normalization);
          m_256qam[208].imag( -1.0 / normalization);
          m_256qam[209].real(-13.0 / normalization);
          m_256qam[209].imag( -1.0 / normalization);
          m_256qam[210].real(-15.0 / normalization);
          m_256qam[210].imag( -3.0 / normalization);
          m_256qam[211].real(-13.0 / normalization);
          m_256qam[211].imag( -3.0 / normalization);
          m_256qam[212].real( -9.0 / normalization);
          m_256qam[212].imag( -1.0 / normalization);
          m_256qam[213].real(-11.0 / normalization);
          m_256qam[213].imag( -1.0 / normalization);
          m_256qam[214].real( -9.0 / normalization);
          m_256qam[214].imag( -3.0 / normalization);
          m_256qam[215].real(-11.0 / normalization);
          m_256qam[215].imag( -3.0 / normalization);
          m_256qam[216].real(-15.0 / normalization);
          m_256qam[216].imag( -7.0 / normalization);
          m_256qam[217].real(-13.0 / normalization);
          m_256qam[217].imag( -7.0 / normalization);
          m_256qam[218].real(-15.0 / normalization);
          m_256qam[218].imag( -5.0 / normalization);
          m_256qam[219].real(-13.0 / normalization);
          m_256qam[219].imag( -5.0 / normalization);
          m_256qam[220].real( -9.0 / normalization);
          m_256qam[220].imag( -7.0 / normalization);
          m_256qam[221].real(-11.0 / normalization);
          m_256qam[221].imag( -7.0 / normalization);
          m_256qam[222].real( -9.0 / normalization);
          m_256qam[222].imag( -5.0 / normalization);
          m_256qam[223].real(-11.0 / normalization);
          m_256qam[223].imag( -5.0 / normalization);
          m_256qam[224].real( -1.0 / normalization);
          m_256qam[224].imag(-15.0 / normalization);
          m_256qam[225].real( -3.0 / normalization);
          m_256qam[225].imag(-15.0 / normalization);
          m_256qam[226].real( -1.0 / normalization);
          m_256qam[226].imag(-13.0 / normalization);
          m_256qam[227].real( -3.0 / normalization);
          m_256qam[227].imag(-13.0 / normalization);
          m_256qam[228].real( -7.0 / normalization);
          m_256qam[228].imag(-15.0 / normalization);
          m_256qam[229].real( -5.0 / normalization);
          m_256qam[229].imag(-15.0 / normalization);
          m_256qam[230].real( -7.0 / normalization);
          m_256qam[230].imag(-13.0 / normalization);
          m_256qam[231].real( -5.0 / normalization);
          m_256qam[231].imag(-13.0 / normalization);
          m_256qam[232].real( -1.0 / normalization);
          m_256qam[232].imag( -9.0 / normalization);
          m_256qam[233].real( -3.0 / normalization);
          m_256qam[233].imag( -9.0 / normalization);
          m_256qam[234].real( -1.0 / normalization);
          m_256qam[234].imag(-11.0 / normalization);
          m_256qam[235].real( -3.0 / normalization);
          m_256qam[235].imag(-11.0 / normalization);
          m_256qam[236].real( -7.0 / normalization);
          m_256qam[236].imag( -9.0 / normalization);
          m_256qam[237].real( -5.0 / normalization);
          m_256qam[237].imag( -9.0 / normalization);
          m_256qam[238].real( -7.0 / normalization);
          m_256qam[238].imag(-11.0 / normalization);
          m_256qam[239].real( -5.0 / normalization);
          m_256qam[239].imag(-11.0 / normalization);
          m_256qam[240].real(-15.0 / normalization);
          m_256qam[240].imag(-15.0 / normalization);
          m_256qam[241].real(-13.0 / normalization);
          m_256qam[241].imag(-15.0 / normalization);
          m_256qam[242].real(-15.0 / normalization);
          m_256qam[242].imag(-13.0 / normalization);
          m_256qam[243].real(-13.0 / normalization);
          m_256qam[243].imag(-13.0 / normalization);
          m_256qam[244].real( -9.0 / normalization);
          m_256qam[244].imag(-15.0 / normalization);
          m_256qam[245].real(-11.0 / normalization);
          m_256qam[245].imag(-15.0 / normalization);
          m_256qam[246].real( -9.0 / normalization);
          m_256qam[246].imag(-13.0 / normalization);
          m_256qam[247].real(-11.0 / normalization);
          m_256qam[247].imag(-13.0 / normalization);
          m_256qam[248].real(-15.0 / normalization);
          m_256qam[248].imag( -9.0 / normalization);
          m_256qam[249].real(-13.0 / normalization);
          m_256qam[249].imag( -9.0 / normalization);
          m_256qam[250].real(-15.0 / normalization);
          m_256qam[250].imag(-11.0 / normalization);
          m_256qam[251].real(-13.0 / normalization);
          m_256qam[251].imag(-11.0 / normalization);
          m_256qam[252].real( -9.0 / normalization);
          m_256qam[252].imag( -9.0 / normalization);
          m_256qam[253].real(-11.0 / normalization);
          m_256qam[253].imag( -9.0 / normalization);
          m_256qam[254].real( -9.0 / normalization);
          m_256qam[254].imag(-11.0 / normalization);
          m_256qam[255].real(-11.0 / normalization);
          m_256qam[255].imag(-11.0 / normalization);
          break;
      }
      signal_constellation = constellation;
      set_output_multiple(2);
    }

    /*
     * Our virtual destructor.
     */
    modulator_bc_impl::~modulator_bc_impl()
    {
    }

    void
    modulator_bc_impl::forecast (int noutput_items, gr_vector_int &ninput_items_required)
    {
      ninput_items_required[0] = noutput_items / 2;
    }

    int
    modulator_bc_impl::general_work (int noutput_items,
                       gr_vector_int &ninput_items,
                       gr_vector_const_void_star &input_items,
                       gr_vector_void_star &output_items)
    {
      const unsigned char *in = (const unsigned char *) input_items[0];
      gr_complex *out = (gr_complex *) output_items[0];
      int index;
      gr_complex zero;

      zero = gr_complex(0.0, 0.0);

      switch (signal_constellation)
      {
        case MOD_16QAM:
          for (int i = 0; i < noutput_items / 2; i++) {
            index = *in++;
            *out++ = m_16qam[index & 0xf];
            *out++ = zero;
          }
          break;
        case MOD_32QAM:
          for (int i = 0; i < noutput_items / 2; i++) {
            index = *in++;
            *out++ = m_32qam[index & 0x1f];
            *out++ = zero;
          }
          break;
        case MOD_64QAM:
          for (int i = 0; i < noutput_items / 2; i++) {
            index = *in++;
            *out++ = m_64qam[index & 0x3f];
            *out++ = zero;
          }
          break;
        case MOD_128QAM:
          for (int i = 0; i < noutput_items / 2; i++) {
            index = *in++;
            *out++ = m_128qam[index & 0x7f];
            *out++ = zero;
          }
          break;
        case MOD_256QAM:
          for (int i = 0; i < noutput_items / 2; i++) {
            index = *in++;
            *out++ = m_256qam[index & 0xff];
            *out++ = zero;
          }
          break;
        }

        // Tell runtime system how many input items we consumed on
        // each input stream.
        consume_each (noutput_items / 2);

        // Tell runtime system how many output items we produced.
        return noutput_items;
    }

  } /* namespace dvbc */
} /* namespace gr */

